### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.bigquery.table.TimePartitioning.expiration_ms
  - google.cloud.bigquery.table.TimePartitioning.field
  - google.cloud.bigquery.table.TimePartitioning.from_api_repr
  - google.cloud.bigquery.table.TimePartitioning.require_partition_filter
  - google.cloud.bigquery.table.TimePartitioning.to_api_repr
  - google.cloud.bigquery.table.TimePartitioning.type_
  - google.cloud.bigquery.table.TimePartitioning.__init__
  - google.cloud.bigquery.table.TimePartitioning
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: google.cloud.bigquery.table
  name: TimePartitioning
  source:
    id: TimePartitioning
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 2475
  summary: 'Configures time-based partitioning for a table.

    '
  syntax:
    content: "TimePartitioning(\n    type_=None, field=None, expiration_ms=None, require_partition_filter=None\n\
      )"
    parameters:
    - description: 'Specifies the type of time partitioning to perform. Defaults to
        <xref uid="google.cloud.bigquery.table.TimePartitioningType.DAY">DAY</xref>.
        Supported values are: * <xref uid="google.cloud.bigquery.table.TimePartitioningType.HOUR">HOUR</xref>
        * <xref uid="google.cloud.bigquery.table.TimePartitioningType.DAY">DAY</xref>
        * <xref uid="google.cloud.bigquery.table.TimePartitioningType.MONTH">MONTH</xref>
        * <xref uid="google.cloud.bigquery.table.TimePartitioningType.YEAR">YEAR</xref>'
      id: type_
      var_type: Optional[<xref uid="google.cloud.bigquery.table.TimePartitioningType">google.cloud.bigquery.table.TimePartitioningType</xref>]
    - description: If set, the table is partitioned by this field. If not set, the
        table is partitioned by pseudo column <code>_PARTITIONTIME</code>. The field
        must be a top-level <code>TIMESTAMP</code>, <code>DATETIME</code>, or <code>DATE</code>
        field. Its mode must be <code>NULLABLE</code> or <code>REQUIRED</code>. See
        the <code>time-unit column-partitioned tables guide <https://cloud.google.com/bigquery/docs/creating-column-partitions></code>_
        in the BigQuery documentation.
      id: field
      var_type: Optional[str]
    - description: Number of milliseconds for which to keep the storage for a partition.
      id: expiration_ms
      var_type: Optional[int]
    - description: 'DEPRECATED: Use <xref uid="google.cloud.bigquery.table.Table.require_partition_filter">require_partition_filter</xref>,
        instead.'
      id: require_partition_filter
      var_type: Optional[bool]
  type: class
  uid: google.cloud.bigquery.table.TimePartitioning
- &id001
  attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.expiration_ms
  langs:
  - python
  module: google.cloud.bigquery.table
  name: expiration_ms
  source:
    id: expiration_ms
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'int: Number of milliseconds to keep the storage for a partition.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TimePartitioning.expiration_ms
- *id001
- &id002
  attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.field
  langs:
  - python
  module: google.cloud.bigquery.table
  name: field
  source:
    id: field
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'str: Field in the table to use for partitioning


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TimePartitioning.field
- *id002
- attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.from_api_repr
  langs:
  - python
  module: google.cloud.bigquery.table
  name: from_api_repr
  source:
    id: from_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 2587
  summary: "Return a `TimePartitioning` object deserialized from a dict.\n\nThis method\
    \ creates a new `TimePartitioning` instance that points to\nthe `api_repr` parameter\
    \ as its internal properties dict. This means\nthat when a `TimePartitioning`\
    \ instance is stored as a property of\nanother object, any changes made at the\
    \ higher level will also appear\nhere::\n\n    >>> time_partitioning = TimePartitioning()\n\
    \    >>> table.time_partitioning = time_partitioning\n    >>> table.time_partitioning.field\
    \ = 'timecolumn'\n    >>> time_partitioning.field\n    'timecolumn'\n"
  syntax:
    content: 'from_api_repr(api_repr: dict)'
    parameters:
    - description: The serialized representation of the TimePartitioning, such as
        what is output by <code>to_api_repr</code>.
      id: api_repr
      var_type: Mapping[str, str]
    returns:
    - description: The <code>TimePartitioning</code> object.
      var_type: google.cloud.bigquery.table.TimePartitioning
  type: method
  uid: google.cloud.bigquery.table.TimePartitioning.from_api_repr
- &id003
  attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.require_partition_filter
  langs:
  - python
  module: google.cloud.bigquery.table
  name: require_partition_filter
  source:
    id: require_partition_filter
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'bool: Specifies whether partition filters are required for queries


    DEPRECATED: Use

    <xref uid="google.cloud.bigquery.table.Table.require_partition_filter">require_partition_filter</xref>,

    instead.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TimePartitioning.require_partition_filter
- *id003
- attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.to_api_repr
  langs:
  - python
  module: google.cloud.bigquery.table
  name: to_api_repr
  source:
    id: to_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 2616
  summary: 'Return a dictionary representing this object.


    This method returns the properties dict of the `TimePartitioning`

    instance rather than making a copy. This means that when a

    `TimePartitioning` instance is stored as a property of another

    object, any changes made at the higher level will also appear here.

    '
  syntax:
    content: to_api_repr()
    parameters: []
    returns:
    - description: A dictionary representing the TimePartitioning object in serialized
        form.
      var_type: dict
  type: method
  uid: google.cloud.bigquery.table.TimePartitioning.to_api_repr
- &id004
  attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.type_
  langs:
  - python
  module: google.cloud.bigquery.table
  name: type_
  source:
    id: type_
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: '<xref uid="google.cloud.bigquery.table.TimePartitioningType">google.cloud.bigquery.table.TimePartitioningType</xref>:
    The type of time

    partitioning to use.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TimePartitioning.type_
- *id004
- attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning.__init__
  langs:
  - python
  module: google.cloud.bigquery.table
  name: __init__
  source:
    id: __init__
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 2508
  summary: 'Initialize self.  See help(type(self)) for accurate signature.


    '
  syntax:
    content: __init__(type_=None, field=None, expiration_ms=None, require_partition_filter=None)
    parameters: []
  type: method
  uid: google.cloud.bigquery.table.TimePartitioning.__init__
- attributes: []
  class: google.cloud.bigquery.table.TimePartitioning
  fullName: google.cloud.bigquery.table.TimePartitioning
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: google.cloud.bigquery.table
  name: TimePartitioning
  source:
    id: TimePartitioning
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 2475
  summary: 'Configures time-based partitioning for a table.

    '
  syntax:
    content: "TimePartitioning(\n    type_=None, field=None, expiration_ms=None, require_partition_filter=None\n\
      )"
    parameters:
    - description: 'Specifies the type of time partitioning to perform. Defaults to
        <xref uid="google.cloud.bigquery.table.TimePartitioningType.DAY">DAY</xref>.
        Supported values are: * <xref uid="google.cloud.bigquery.table.TimePartitioningType.HOUR">HOUR</xref>
        * <xref uid="google.cloud.bigquery.table.TimePartitioningType.DAY">DAY</xref>
        * <xref uid="google.cloud.bigquery.table.TimePartitioningType.MONTH">MONTH</xref>
        * <xref uid="google.cloud.bigquery.table.TimePartitioningType.YEAR">YEAR</xref>'
      id: type_
      var_type: Optional[<xref uid="google.cloud.bigquery.table.TimePartitioningType">google.cloud.bigquery.table.TimePartitioningType</xref>]
    - description: If set, the table is partitioned by this field. If not set, the
        table is partitioned by pseudo column <code>_PARTITIONTIME</code>. The field
        must be a top-level <code>TIMESTAMP</code>, <code>DATETIME</code>, or <code>DATE</code>
        field. Its mode must be <code>NULLABLE</code> or <code>REQUIRED</code>. See
        the <code>time-unit column-partitioned tables guide <https://cloud.google.com/bigquery/docs/creating-column-partitions></code>_
        in the BigQuery documentation.
      id: field
      var_type: Optional[str]
    - description: Number of milliseconds for which to keep the storage for a partition.
      id: expiration_ms
      var_type: Optional[int]
    - description: 'DEPRECATED: Use <xref uid="google.cloud.bigquery.table.Table.require_partition_filter">require_partition_filter</xref>,
        instead.'
      id: require_partition_filter
      var_type: Optional[bool]
  type: method
  uid: google.cloud.bigquery.table.TimePartitioning
references:
- fullName: google.cloud.bigquery.table.TimePartitioning.expiration_ms
  isExternal: false
  name: expiration_ms
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.expiration_ms
- fullName: google.cloud.bigquery.table.TimePartitioning.field
  isExternal: false
  name: field
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.field
- fullName: google.cloud.bigquery.table.TimePartitioning.from_api_repr
  isExternal: false
  name: from_api_repr
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.from_api_repr
- fullName: google.cloud.bigquery.table.TimePartitioning.require_partition_filter
  isExternal: false
  name: require_partition_filter
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.require_partition_filter
- fullName: google.cloud.bigquery.table.TimePartitioning.to_api_repr
  isExternal: false
  name: to_api_repr
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.to_api_repr
- fullName: google.cloud.bigquery.table.TimePartitioning.type_
  isExternal: false
  name: type_
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.type_
- fullName: google.cloud.bigquery.table.TimePartitioning.__init__
  isExternal: false
  name: __init__
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning.__init__
- fullName: google.cloud.bigquery.table.TimePartitioning
  isExternal: false
  name: TimePartitioning
  parent: google.cloud.bigquery.table.TimePartitioning
  uid: google.cloud.bigquery.table.TimePartitioning
