### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.bigquery.job.LoadJob.add_done_callback
  - google.cloud.bigquery.job.LoadJob.allow_jagged_rows
  - google.cloud.bigquery.job.LoadJob.allow_quoted_newlines
  - google.cloud.bigquery.job.LoadJob.autodetect
  - google.cloud.bigquery.job.LoadJob.cancel
  - google.cloud.bigquery.job.LoadJob.cancelled
  - google.cloud.bigquery.job.LoadJob.clustering_fields
  - google.cloud.bigquery.job.LoadJob.create_disposition
  - google.cloud.bigquery.job.LoadJob.created
  - google.cloud.bigquery.job.LoadJob.destination
  - google.cloud.bigquery.job.LoadJob.destination_encryption_configuration
  - google.cloud.bigquery.job.LoadJob.destination_table_description
  - google.cloud.bigquery.job.LoadJob.destination_table_friendly_name
  - google.cloud.bigquery.job.LoadJob.done
  - google.cloud.bigquery.job.LoadJob.encoding
  - google.cloud.bigquery.job.LoadJob.ended
  - google.cloud.bigquery.job.LoadJob.error_result
  - google.cloud.bigquery.job.LoadJob.errors
  - google.cloud.bigquery.job.LoadJob.etag
  - google.cloud.bigquery.job.LoadJob.exception
  - google.cloud.bigquery.job.LoadJob.exists
  - google.cloud.bigquery.job.LoadJob.field_delimiter
  - google.cloud.bigquery.job.LoadJob.from_api_repr
  - google.cloud.bigquery.job.LoadJob.ignore_unknown_values
  - google.cloud.bigquery.job.LoadJob.input_file_bytes
  - google.cloud.bigquery.job.LoadJob.input_files
  - google.cloud.bigquery.job.LoadJob.job_id
  - google.cloud.bigquery.job.LoadJob.job_type
  - google.cloud.bigquery.job.LoadJob.labels
  - google.cloud.bigquery.job.LoadJob.location
  - google.cloud.bigquery.job.LoadJob.max_bad_records
  - google.cloud.bigquery.job.LoadJob.null_marker
  - google.cloud.bigquery.job.LoadJob.num_child_jobs
  - google.cloud.bigquery.job.LoadJob.output_bytes
  - google.cloud.bigquery.job.LoadJob.output_rows
  - google.cloud.bigquery.job.LoadJob.parent_job_id
  - google.cloud.bigquery.job.LoadJob.path
  - google.cloud.bigquery.job.LoadJob.project
  - google.cloud.bigquery.job.LoadJob.quote_character
  - google.cloud.bigquery.job.LoadJob.range_partitioning
  - google.cloud.bigquery.job.LoadJob.reload
  - google.cloud.bigquery.job.LoadJob.reservation_usage
  - google.cloud.bigquery.job.LoadJob.result
  - google.cloud.bigquery.job.LoadJob.running
  - google.cloud.bigquery.job.LoadJob.schema
  - google.cloud.bigquery.job.LoadJob.schema_update_options
  - google.cloud.bigquery.job.LoadJob.script_statistics
  - google.cloud.bigquery.job.LoadJob.self_link
  - google.cloud.bigquery.job.LoadJob.session_info
  - google.cloud.bigquery.job.LoadJob.set_exception
  - google.cloud.bigquery.job.LoadJob.set_result
  - google.cloud.bigquery.job.LoadJob.skip_leading_rows
  - google.cloud.bigquery.job.LoadJob.source_format
  - google.cloud.bigquery.job.LoadJob.source_uris
  - google.cloud.bigquery.job.LoadJob.started
  - google.cloud.bigquery.job.LoadJob.state
  - google.cloud.bigquery.job.LoadJob.time_partitioning
  - google.cloud.bigquery.job.LoadJob.to_api_repr
  - google.cloud.bigquery.job.LoadJob.transaction_info
  - google.cloud.bigquery.job.LoadJob.use_avro_logical_types
  - google.cloud.bigquery.job.LoadJob.user_email
  - google.cloud.bigquery.job.LoadJob.write_disposition
  - google.cloud.bigquery.job.LoadJob.__init__
  - google.cloud.bigquery.job.LoadJob
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: google.api_core.future.base.Future
      type: google.api_core.future.polling.PollingFuture
    type: google.cloud.bigquery.job.base._AsyncJob
  langs:
  - python
  module: google.cloud.bigquery.job
  name: LoadJob
  source:
    id: LoadJob
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 519
  summary: 'Asynchronous job for loading data into a table.


    Can load from Google Cloud Storage URIs or from a file.

    '
  syntax:
    content: LoadJob(job_id, source_uris, destination, client, job_config=None)
    parameters:
    - description: the job's ID
      id: job_id
      var_type: str
    - description: URIs of one or more data files to be loaded. See https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobConfigurationLoad.FIELDS.source_uris
        for supported URI formats. Pass None for jobs that load from a file.
      id: source_uris
      var_type: Optional[Sequence[str]]
    - description: reference to table into which data is to be loaded.
      id: destination
      var_type: <xref uid="google.cloud.bigquery.table.TableReference">google.cloud.bigquery.table.TableReference</xref>
    - description: A client which holds credentials and project configuration for
        the dataset (which requires a project).
      id: client
      var_type: <xref uid="google.cloud.bigquery.client.Client">google.cloud.bigquery.client.Client</xref>
  type: class
  uid: google.cloud.bigquery.job.LoadJob
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.add_done_callback
  langs:
  - python
  module: google.cloud.bigquery.job
  name: add_done_callback
  source:
    id: add_done_callback
    path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
    remote:
      branch: add_goldens
      path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 155
  summary: 'Add a callback to be executed when the operation is complete.


    If the operation is not already complete, this will start a helper

    thread to poll for the status of the operation in the background.

    '
  syntax:
    content: add_done_callback(fn)
    parameters:
    - description: The callback to execute when the operation is complete.
      id: fn
      var_type: Callable[Future]
  type: method
  uid: google.cloud.bigquery.job.LoadJob.add_done_callback
- &id001
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.allow_jagged_rows
  langs:
  - python
  module: google.cloud.bigquery.job
  name: allow_jagged_rows
  source:
    id: allow_jagged_rows
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.allow_jagged_rows">allow_jagged_rows</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.allow_jagged_rows
- *id001
- &id002
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.allow_quoted_newlines
  langs:
  - python
  module: google.cloud.bigquery.job
  name: allow_quoted_newlines
  source:
    id: allow_quoted_newlines
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.allow_quoted_newlines">allow_quoted_newlines</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.allow_quoted_newlines
- *id002
- &id003
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.autodetect
  langs:
  - python
  module: google.cloud.bigquery.job
  name: autodetect
  source:
    id: autodetect
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.autodetect">autodetect</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.autodetect
- *id003
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.cancel
  langs:
  - python
  module: google.cloud.bigquery.job
  name: cancel
  source:
    id: cancel
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 604
  summary: 'API call:  cancel job via a POST request


    See

    https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/cancel

    '
  syntax:
    content: 'cancel(client=None, retry: retries.Retry = <google.api_core.retry.Retry
      object>, timeout: float = None)'
    parameters:
    - description: The number of seconds to wait for the underlying HTTP transport
        before using <code>retry</code>
      id: timeout
      var_type: Optional[float]
    - description: the client to use. If not passed, falls back to the <code>client</code>
        stored on the current dataset.
      id: client
      var_type: Optional[<xref uid="google.cloud.bigquery.client.Client">google.cloud.bigquery.client.Client</xref>]
    - description: How to retry the RPC.
      id: retry
      var_type: Optional[google.api_core.retry.Retry]
    returns:
    - description: Boolean indicating that the cancel request was sent.
      var_type: bool
  type: method
  uid: google.cloud.bigquery.job.LoadJob.cancel
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.cancelled
  langs:
  - python
  module: google.cloud.bigquery.job
  name: cancelled
  source:
    id: cancelled
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 730
  summary: 'Check if the job has been cancelled.


    This always returns False. It''s not possible to check if a job was

    cancelled in the API. This method is here to satisfy the interface

    for `google.api_core.future.Future`.

    '
  syntax:
    content: cancelled()
    parameters: []
    returns:
    - description: 'False'
      var_type: bool
  type: method
  uid: google.cloud.bigquery.job.LoadJob.cancelled
- &id004
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.clustering_fields
  langs:
  - python
  module: google.cloud.bigquery.job
  name: clustering_fields
  source:
    id: clustering_fields
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.clustering_fields">clustering_fields</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.clustering_fields
- *id004
- &id005
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.create_disposition
  langs:
  - python
  module: google.cloud.bigquery.job
  name: create_disposition
  source:
    id: create_disposition
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.create_disposition">create_disposition</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.create_disposition
- *id005
- &id006
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.created
  langs:
  - python
  module: google.cloud.bigquery.job
  name: created
  source:
    id: created
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Datetime at which the job was created.

    '
  syntax:
    returns:
    - description: the creation time (None until set from the server).
      var_type: Optional[datetime.datetime]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.created
- *id006
- &id007
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.destination
  langs:
  - python
  module: google.cloud.bigquery.job
  name: destination
  source:
    id: destination
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: '<xref uid="google.cloud.bigquery.table.TableReference">google.cloud.bigquery.table.TableReference</xref>:
    table where loaded rows are written


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobConfigurationLoad.FIELDS.destination_table


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.destination
- *id007
- &id008
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.destination_encryption_configuration
  langs:
  - python
  module: google.cloud.bigquery.job
  name: destination_encryption_configuration
  source:
    id: destination_encryption_configuration
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: '<xref uid="google.cloud.bigquery.encryption_configuration.EncryptionConfiguration">google.cloud.bigquery.encryption_configuration.EncryptionConfiguration</xref>:
    Custom

    encryption configuration for the destination table.


    Custom encryption configuration (e.g., Cloud KMS keys)

    or :data:`None` if using default encryption.


    See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.destination_encryption_configuration">destination_encryption_configuration</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.destination_encryption_configuration
- *id008
- &id009
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.destination_table_description
  langs:
  - python
  module: google.cloud.bigquery.job
  name: destination_table_description
  source:
    id: destination_table_description
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[str] name given to destination table.


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#DestinationTableProperties.FIELDS.description


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.destination_table_description
- *id009
- &id010
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.destination_table_friendly_name
  langs:
  - python
  module: google.cloud.bigquery.job
  name: destination_table_friendly_name
  source:
    id: destination_table_friendly_name
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[str] name given to destination table.


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#DestinationTableProperties.FIELDS.friendly_name


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.destination_table_friendly_name
- *id010
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.done
  langs:
  - python
  module: google.cloud.bigquery.job
  name: done
  source:
    id: done
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 672
  summary: 'Checks if the job is complete.

    '
  syntax:
    content: 'done(retry: retries.Retry = <google.api_core.retry.Retry object>, timeout:
      float = None, reload: bool = True)'
    parameters:
    - defaultValue: None
      description: The number of seconds to wait for the underlying HTTP transport
        before using <code>retry</code>.
      id: timeout
      var_type: Optional[float]
    - defaultValue: 'True'
      description: If <code>True</code>, make an API call to refresh the job state
        of unfinished jobs before checking. Default <code>True</code>.
      id: reload
      var_type: Optional[bool]
    - description: How to retry the RPC. If the job state is <code>DONE</code>, retrying
        is aborted early, as the job will not change anymore.
      id: retry
      var_type: Optional[google.api_core.retry.Retry]
    returns:
    - description: True if the job is complete, False otherwise.
      var_type: bool
  type: method
  uid: google.cloud.bigquery.job.LoadJob.done
- &id011
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.encoding
  langs:
  - python
  module: google.cloud.bigquery.job
  name: encoding
  source:
    id: encoding
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.encoding">encoding</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.encoding
- *id011
- &id012
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.ended
  langs:
  - python
  module: google.cloud.bigquery.job
  name: ended
  source:
    id: ended
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Datetime at which the job finished.

    '
  syntax:
    returns:
    - description: the end time (None until set from the server).
      var_type: Optional[datetime.datetime]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.ended
- *id012
- &id013
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.error_result
  langs:
  - python
  module: google.cloud.bigquery.job
  name: error_result
  source:
    id: error_result
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Error information about the job as a whole.

    '
  syntax:
    returns:
    - description: the error information (None until set from the server).
      var_type: Optional[Mapping]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.error_result
- *id013
- &id014
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.errors
  langs:
  - python
  module: google.cloud.bigquery.job
  name: errors
  source:
    id: errors
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Information about individual errors generated by the job.

    '
  syntax:
    returns:
    - description: the error information (None until set from the server).
      var_type: Optional[List[Mapping]]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.errors
- *id014
- &id015
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.etag
  langs:
  - python
  module: google.cloud.bigquery.job
  name: etag
  source:
    id: etag
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'ETag for the job resource.

    '
  syntax:
    returns:
    - description: the ETag (None until set from the server).
      var_type: Optional[str]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.etag
- *id015
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.exception
  langs:
  - python
  module: google.cloud.bigquery.job
  name: exception
  source:
    id: exception
    path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
    remote:
      branch: add_goldens
      path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 141
  summary: 'Get the exception from the operation, blocking if necessary.

    '
  syntax:
    content: exception(timeout=None)
    parameters:
    - description: How long to wait for the operation to complete. If None, wait indefinitely.
      id: timeout
      var_type: int
    returns:
    - description: The operation's error.
      var_type: Optional[google.api_core.GoogleAPICallError]
  type: method
  uid: google.cloud.bigquery.job.LoadJob.exception
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.exists
  langs:
  - python
  module: google.cloud.bigquery.job
  name: exists
  source:
    id: exists
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 522
  summary: 'API call:  test for the existence of the job via a GET request


    See

    https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/get

    '
  syntax:
    content: 'exists(client=None, retry: retries.Retry = <google.api_core.retry.Retry
      object>, timeout: float = None)'
    parameters:
    - description: The number of seconds to wait for the underlying HTTP transport
        before using <code>retry</code>.
      id: timeout
      var_type: Optional[float]
    - description: the client to use. If not passed, falls back to the <code>client</code>
        stored on the current dataset.
      id: client
      var_type: Optional[<xref uid="google.cloud.bigquery.client.Client">google.cloud.bigquery.client.Client</xref>]
    - description: How to retry the RPC.
      id: retry
      var_type: Optional[google.api_core.retry.Retry]
    returns:
    - description: Boolean indicating existence of the job.
      var_type: bool
  type: method
  uid: google.cloud.bigquery.job.LoadJob.exists
- &id016
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.field_delimiter
  langs:
  - python
  module: google.cloud.bigquery.job
  name: field_delimiter
  source:
    id: field_delimiter
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.field_delimiter">field_delimiter</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.field_delimiter
- *id016
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.from_api_repr
  langs:
  - python
  module: google.cloud.bigquery.job
  name: from_api_repr
  source:
    id: from_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 811
  summary: 'Factory:  construct a job given its API representation


    <aside class="note">

    <b>Note:</b>

    This method assumes that the project found in the resource matches

    the client''s project.

    </aside>'
  syntax:
    content: 'from_api_repr(resource: dict, client)'
    parameters:
    - description: dataset job representation returned from the API
      id: resource
      var_type: Dict
    - description: Client which holds credentials and project configuration for the
        dataset.
      id: client
      var_type: <xref uid="google.cloud.bigquery.client.Client">google.cloud.bigquery.client.Client</xref>
    returns:
    - description: Job parsed from <code>resource</code>.
      var_type: google.cloud.bigquery.job.LoadJob
  type: method
  uid: google.cloud.bigquery.job.LoadJob.from_api_repr
- &id017
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.ignore_unknown_values
  langs:
  - python
  module: google.cloud.bigquery.job
  name: ignore_unknown_values
  source:
    id: ignore_unknown_values
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.ignore_unknown_values">ignore_unknown_values</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.ignore_unknown_values
- *id017
- &id018
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.input_file_bytes
  langs:
  - python
  module: google.cloud.bigquery.job
  name: input_file_bytes
  source:
    id: input_file_bytes
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Count of bytes loaded from source files.

    '
  syntax:
    exceptions:
    - description: for invalid value types.
      var_type: ValueError
    returns:
    - description: the count (None until set from the server).
      var_type: Optional[int]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.input_file_bytes
- *id018
- &id019
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.input_files
  langs:
  - python
  module: google.cloud.bigquery.job
  name: input_files
  source:
    id: input_files
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Count of source files.

    '
  syntax:
    returns:
    - description: the count (None until set from the server).
      var_type: Optional[int]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.input_files
- *id019
- &id020
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.job_id
  langs:
  - python
  module: google.cloud.bigquery.job
  name: job_id
  source:
    id: job_id
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'str: ID of the job.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.job_id
- *id020
- &id021
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.job_type
  langs:
  - python
  module: google.cloud.bigquery.job
  name: job_type
  source:
    id: job_type
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Type of job.

    '
  syntax:
    returns:
    - description: one of 'load', 'copy', 'extract', 'query'.
      var_type: str
  type: property
  uid: google.cloud.bigquery.job.LoadJob.job_type
- *id021
- &id022
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.labels
  langs:
  - python
  module: google.cloud.bigquery.job
  name: labels
  source:
    id: labels
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Dict[str, str]: Labels for the job.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.labels
- *id022
- &id023
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.location
  langs:
  - python
  module: google.cloud.bigquery.job
  name: location
  source:
    id: location
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'str: Location where the job runs.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.location
- *id023
- &id024
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.max_bad_records
  langs:
  - python
  module: google.cloud.bigquery.job
  name: max_bad_records
  source:
    id: max_bad_records
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.max_bad_records">max_bad_records</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.max_bad_records
- *id024
- &id025
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.null_marker
  langs:
  - python
  module: google.cloud.bigquery.job
  name: null_marker
  source:
    id: null_marker
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.null_marker">null_marker</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.null_marker
- *id025
- &id026
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.num_child_jobs
  langs:
  - python
  module: google.cloud.bigquery.job
  name: num_child_jobs
  source:
    id: num_child_jobs
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'The number of child jobs executed.


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobStatistics.FIELDS.num_child_jobs

    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.num_child_jobs
- *id026
- &id027
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.output_bytes
  langs:
  - python
  module: google.cloud.bigquery.job
  name: output_bytes
  source:
    id: output_bytes
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Count of bytes saved to destination table.

    '
  syntax:
    returns:
    - description: the count (None until set from the server).
      var_type: Optional[int]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.output_bytes
- *id027
- &id028
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.output_rows
  langs:
  - python
  module: google.cloud.bigquery.job
  name: output_rows
  source:
    id: output_rows
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Count of rows saved to destination table.

    '
  syntax:
    returns:
    - description: the count (None until set from the server).
      var_type: Optional[int]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.output_rows
- *id028
- &id029
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.parent_job_id
  langs:
  - python
  module: google.cloud.bigquery.job
  name: parent_job_id
  source:
    id: parent_job_id
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Return the ID of the parent job.


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobStatistics.FIELDS.parent_job_id

    '
  syntax:
    returns:
    - description: parent job id.
      var_type: Optional[str]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.parent_job_id
- *id029
- &id030
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.path
  langs:
  - python
  module: google.cloud.bigquery.job
  name: path
  source:
    id: path
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'URL path for the job''s APIs.

    '
  syntax:
    returns:
    - description: the path based on project and job ID.
      var_type: str
  type: property
  uid: google.cloud.bigquery.job.LoadJob.path
- *id030
- &id031
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.project
  langs:
  - python
  module: google.cloud.bigquery.job
  name: project
  source:
    id: project
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Project bound to the job.

    '
  syntax:
    returns:
    - description: the project (derived from the client).
      var_type: str
  type: property
  uid: google.cloud.bigquery.job.LoadJob.project
- *id031
- &id032
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.quote_character
  langs:
  - python
  module: google.cloud.bigquery.job
  name: quote_character
  source:
    id: quote_character
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.quote_character">quote_character</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.quote_character
- *id032
- &id033
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.range_partitioning
  langs:
  - python
  module: google.cloud.bigquery.job
  name: range_partitioning
  source:
    id: range_partitioning
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.range_partitioning">range_partitioning</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.range_partitioning
- *id033
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.reload
  langs:
  - python
  module: google.cloud.bigquery.job
  name: reload
  source:
    id: reload
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 567
  summary: 'API call:  refresh job properties via a GET request.


    See

    https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/get

    '
  syntax:
    content: 'reload(client=None, retry: retries.Retry = <google.api_core.retry.Retry
      object>, timeout: float = None)'
    parameters:
    - description: The number of seconds to wait for the underlying HTTP transport
        before using <code>retry</code>.
      id: timeout
      var_type: Optional[float]
    - description: the client to use. If not passed, falls back to the <code>client</code>
        stored on the current dataset.
      id: client
      var_type: Optional[<xref uid="google.cloud.bigquery.client.Client">google.cloud.bigquery.client.Client</xref>]
    - description: How to retry the RPC.
      id: retry
      var_type: Optional[google.api_core.retry.Retry]
  type: method
  uid: google.cloud.bigquery.job.LoadJob.reload
- &id034
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.reservation_usage
  langs:
  - python
  module: google.cloud.bigquery.job
  name: reservation_usage
  source:
    id: reservation_usage
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Job resource usage breakdown by reservation.

    '
  syntax:
    returns:
    - description: Reservation usage stats. Can be empty if not set from the server.
      var_type: List[<xref uid="google.cloud.bigquery.job.ReservationUsage">google.cloud.bigquery.job.ReservationUsage</xref>]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.reservation_usage
- *id034
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.result
  langs:
  - python
  module: google.cloud.bigquery.job
  name: result
  source:
    id: result
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/base.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 700
  summary: 'Start the job and wait for it to complete and get the result.

    '
  syntax:
    content: 'result(retry: retries.Retry = <google.api_core.retry.Retry object>,
      timeout: float = None)'
    exceptions:
    - description: if the job failed.
      var_type: google.cloud.exceptions.GoogleAPICallError
    - description: if the job did not complete in the given timeout.
      var_type: concurrent.futures.TimeoutError
    parameters:
    - defaultValue: None
      description: The number of seconds to wait for the underlying HTTP transport
        before using <code>retry</code>. If multiple requests are made under the hood,
        <code>timeout</code> applies to each individual request.
      id: timeout
      var_type: Optional[float]
    - description: How to retry the RPC. If the job state is <code>DONE</code>, retrying
        is aborted early, as the job will not change anymore.
      id: retry
      var_type: Optional[google.api_core.retry.Retry]
    returns:
    - description: This instance.
      var_type: _AsyncJob
  type: method
  uid: google.cloud.bigquery.job.LoadJob.result
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.running
  langs:
  - python
  module: google.cloud.bigquery.job
  name: running
  source:
    id: running
    path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
    remote:
      branch: add_goldens
      path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 91
  summary: 'True if the operation is currently running.


    '
  syntax:
    content: running()
    parameters: []
  type: method
  uid: google.cloud.bigquery.job.LoadJob.running
- &id035
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.schema
  langs:
  - python
  module: google.cloud.bigquery.job
  name: schema
  source:
    id: schema
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.schema">schema</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.schema
- *id035
- &id036
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.schema_update_options
  langs:
  - python
  module: google.cloud.bigquery.job
  name: schema_update_options
  source:
    id: schema_update_options
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.schema_update_options">schema_update_options</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.schema_update_options
- *id036
- &id037
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.script_statistics
  langs:
  - python
  module: google.cloud.bigquery.job
  name: script_statistics
  source:
    id: script_statistics
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Statistics for a child job of a script.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.script_statistics
- *id037
- &id038
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.self_link
  langs:
  - python
  module: google.cloud.bigquery.job
  name: self_link
  source:
    id: self_link
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'URL for the job resource.

    '
  syntax:
    returns:
    - description: the URL (None until set from the server).
      var_type: Optional[str]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.self_link
- *id038
- &id039
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.session_info
  langs:
  - python
  module: google.cloud.bigquery.job
  name: session_info
  source:
    id: session_info
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: '[Preview] Information of the session if this job is part of one.


    .. versionadded:: 2.29.0


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.session_info
- *id039
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.set_exception
  langs:
  - python
  module: google.cloud.bigquery.job
  name: set_exception
  source:
    id: set_exception
    path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
    remote:
      branch: add_goldens
      path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 189
  summary: 'Set the Future''s exception.


    '
  syntax:
    content: set_exception(exception)
    parameters: []
  type: method
  uid: google.cloud.bigquery.job.LoadJob.set_exception
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.set_result
  langs:
  - python
  module: google.cloud.bigquery.job
  name: set_result
  source:
    id: set_result
    path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
    remote:
      branch: add_goldens
      path: .tox/update_goldens/lib/python3.9/site-packages/google/api_core/future/polling.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 183
  summary: 'Set the Future''s result.


    '
  syntax:
    content: set_result(result)
    parameters: []
  type: method
  uid: google.cloud.bigquery.job.LoadJob.set_result
- &id040
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.skip_leading_rows
  langs:
  - python
  module: google.cloud.bigquery.job
  name: skip_leading_rows
  source:
    id: skip_leading_rows
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.skip_leading_rows">skip_leading_rows</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.skip_leading_rows
- *id040
- &id041
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.source_format
  langs:
  - python
  module: google.cloud.bigquery.job
  name: source_format
  source:
    id: source_format
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.source_format">source_format</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.source_format
- *id041
- &id042
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.source_uris
  langs:
  - python
  module: google.cloud.bigquery.job
  name: source_uris
  source:
    id: source_uris
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[Sequence[str]]: URIs of data files to be loaded. See

    https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobConfigurationLoad.FIELDS.source_uris

    for supported URI formats. None for jobs that load from a file.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.source_uris
- *id042
- &id043
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.started
  langs:
  - python
  module: google.cloud.bigquery.job
  name: started
  source:
    id: started
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Datetime at which the job was started.

    '
  syntax:
    returns:
    - description: the start time (None until set from the server).
      var_type: Optional[datetime.datetime]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.started
- *id043
- &id044
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.state
  langs:
  - python
  module: google.cloud.bigquery.job
  name: state
  source:
    id: state
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Status of the job.

    '
  syntax:
    returns:
    - description: the state (None until set from the server).
      var_type: Optional[str]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.state
- *id044
- &id045
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.time_partitioning
  langs:
  - python
  module: google.cloud.bigquery.job
  name: time_partitioning
  source:
    id: time_partitioning
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.time_partitioning">time_partitioning</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.time_partitioning
- *id045
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.to_api_repr
  langs:
  - python
  module: google.cloud.bigquery.job
  name: to_api_repr
  source:
    id: to_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 803
  summary: 'Generate a resource for `_begin`.


    '
  syntax:
    content: to_api_repr()
    parameters: []
  type: method
  uid: google.cloud.bigquery.job.LoadJob.to_api_repr
- &id046
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.transaction_info
  langs:
  - python
  module: google.cloud.bigquery.job
  name: transaction_info
  source:
    id: transaction_info
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Information of the multi-statement transaction if this job is part of
    one.


    Since a scripting query job can execute multiple transactions, this

    property is only expected on child jobs. Use the

    <xref uid="google.cloud.bigquery.client.Client.list_jobs">list_jobs</xref> method
    with the

    `parent_job` parameter to iterate over child jobs.


    .. versionadded:: 2.24.0


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.transaction_info
- *id046
- &id047
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.use_avro_logical_types
  langs:
  - python
  module: google.cloud.bigquery.job
  name: use_avro_logical_types
  source:
    id: use_avro_logical_types
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.use_avro_logical_types">use_avro_logical_types</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.use_avro_logical_types
- *id047
- &id048
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.user_email
  langs:
  - python
  module: google.cloud.bigquery.job
  name: user_email
  source:
    id: user_email
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'E-mail address of user who submitted the job.

    '
  syntax:
    returns:
    - description: the URL (None until set from the server).
      var_type: Optional[str]
  type: property
  uid: google.cloud.bigquery.job.LoadJob.user_email
- *id048
- &id049
  attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.write_disposition
  langs:
  - python
  module: google.cloud.bigquery.job
  name: write_disposition
  source:
    id: write_disposition
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'See

    <xref uid="google.cloud.bigquery.job.LoadJobConfig.write_disposition">write_disposition</xref>.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.job.LoadJob.write_disposition
- *id049
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob.__init__
  langs:
  - python
  module: google.cloud.bigquery.job
  name: __init__
  source:
    id: __init__
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 541
  summary: 'Initialize self.  See help(type(self)) for accurate signature.


    '
  syntax:
    content: __init__(job_id, source_uris, destination, client, job_config=None)
    parameters: []
  type: method
  uid: google.cloud.bigquery.job.LoadJob.__init__
- attributes: []
  class: google.cloud.bigquery.job.LoadJob
  fullName: google.cloud.bigquery.job.LoadJob
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: google.api_core.future.base.Future
      type: google.api_core.future.polling.PollingFuture
    type: google.cloud.bigquery.job.base._AsyncJob
  langs:
  - python
  module: google.cloud.bigquery.job
  name: LoadJob
  source:
    id: LoadJob
    path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/job/load.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 519
  summary: 'Asynchronous job for loading data into a table.


    Can load from Google Cloud Storage URIs or from a file.

    '
  syntax:
    content: LoadJob(job_id, source_uris, destination, client, job_config=None)
    parameters:
    - description: the job's ID
      id: job_id
      var_type: str
    - description: URIs of one or more data files to be loaded. See https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobConfigurationLoad.FIELDS.source_uris
        for supported URI formats. Pass None for jobs that load from a file.
      id: source_uris
      var_type: Optional[Sequence[str]]
    - description: reference to table into which data is to be loaded.
      id: destination
      var_type: <xref uid="google.cloud.bigquery.table.TableReference">google.cloud.bigquery.table.TableReference</xref>
    - description: A client which holds credentials and project configuration for
        the dataset (which requires a project).
      id: client
      var_type: <xref uid="google.cloud.bigquery.client.Client">google.cloud.bigquery.client.Client</xref>
  type: method
  uid: google.cloud.bigquery.job.LoadJob
references:
- fullName: google.cloud.bigquery.job.LoadJob.add_done_callback
  isExternal: false
  name: add_done_callback
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.add_done_callback
- fullName: google.cloud.bigquery.job.LoadJob.allow_jagged_rows
  isExternal: false
  name: allow_jagged_rows
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.allow_jagged_rows
- fullName: google.cloud.bigquery.job.LoadJob.allow_quoted_newlines
  isExternal: false
  name: allow_quoted_newlines
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.allow_quoted_newlines
- fullName: google.cloud.bigquery.job.LoadJob.autodetect
  isExternal: false
  name: autodetect
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.autodetect
- fullName: google.cloud.bigquery.job.LoadJob.cancel
  isExternal: false
  name: cancel
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.cancel
- fullName: google.cloud.bigquery.job.LoadJob.cancelled
  isExternal: false
  name: cancelled
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.cancelled
- fullName: google.cloud.bigquery.job.LoadJob.clustering_fields
  isExternal: false
  name: clustering_fields
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.clustering_fields
- fullName: google.cloud.bigquery.job.LoadJob.create_disposition
  isExternal: false
  name: create_disposition
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.create_disposition
- fullName: google.cloud.bigquery.job.LoadJob.created
  isExternal: false
  name: created
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.created
- fullName: google.cloud.bigquery.job.LoadJob.destination
  isExternal: false
  name: destination
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.destination
- fullName: google.cloud.bigquery.job.LoadJob.destination_encryption_configuration
  isExternal: false
  name: destination_encryption_configuration
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.destination_encryption_configuration
- fullName: google.cloud.bigquery.job.LoadJob.destination_table_description
  isExternal: false
  name: destination_table_description
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.destination_table_description
- fullName: google.cloud.bigquery.job.LoadJob.destination_table_friendly_name
  isExternal: false
  name: destination_table_friendly_name
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.destination_table_friendly_name
- fullName: google.cloud.bigquery.job.LoadJob.done
  isExternal: false
  name: done
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.done
- fullName: google.cloud.bigquery.job.LoadJob.encoding
  isExternal: false
  name: encoding
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.encoding
- fullName: google.cloud.bigquery.job.LoadJob.ended
  isExternal: false
  name: ended
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.ended
- fullName: google.cloud.bigquery.job.LoadJob.error_result
  isExternal: false
  name: error_result
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.error_result
- fullName: google.cloud.bigquery.job.LoadJob.errors
  isExternal: false
  name: errors
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.errors
- fullName: google.cloud.bigquery.job.LoadJob.etag
  isExternal: false
  name: etag
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.etag
- fullName: google.cloud.bigquery.job.LoadJob.exception
  isExternal: false
  name: exception
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.exception
- fullName: google.cloud.bigquery.job.LoadJob.exists
  isExternal: false
  name: exists
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.exists
- fullName: google.cloud.bigquery.job.LoadJob.field_delimiter
  isExternal: false
  name: field_delimiter
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.field_delimiter
- fullName: google.cloud.bigquery.job.LoadJob.from_api_repr
  isExternal: false
  name: from_api_repr
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.from_api_repr
- fullName: google.cloud.bigquery.job.LoadJob.ignore_unknown_values
  isExternal: false
  name: ignore_unknown_values
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.ignore_unknown_values
- fullName: google.cloud.bigquery.job.LoadJob.input_file_bytes
  isExternal: false
  name: input_file_bytes
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.input_file_bytes
- fullName: google.cloud.bigquery.job.LoadJob.input_files
  isExternal: false
  name: input_files
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.input_files
- fullName: google.cloud.bigquery.job.LoadJob.job_id
  isExternal: false
  name: job_id
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.job_id
- fullName: google.cloud.bigquery.job.LoadJob.job_type
  isExternal: false
  name: job_type
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.job_type
- fullName: google.cloud.bigquery.job.LoadJob.labels
  isExternal: false
  name: labels
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.labels
- fullName: google.cloud.bigquery.job.LoadJob.location
  isExternal: false
  name: location
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.location
- fullName: google.cloud.bigquery.job.LoadJob.max_bad_records
  isExternal: false
  name: max_bad_records
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.max_bad_records
- fullName: google.cloud.bigquery.job.LoadJob.null_marker
  isExternal: false
  name: null_marker
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.null_marker
- fullName: google.cloud.bigquery.job.LoadJob.num_child_jobs
  isExternal: false
  name: num_child_jobs
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.num_child_jobs
- fullName: google.cloud.bigquery.job.LoadJob.output_bytes
  isExternal: false
  name: output_bytes
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.output_bytes
- fullName: google.cloud.bigquery.job.LoadJob.output_rows
  isExternal: false
  name: output_rows
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.output_rows
- fullName: google.cloud.bigquery.job.LoadJob.parent_job_id
  isExternal: false
  name: parent_job_id
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.parent_job_id
- fullName: google.cloud.bigquery.job.LoadJob.path
  isExternal: false
  name: path
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.path
- fullName: google.cloud.bigquery.job.LoadJob.project
  isExternal: false
  name: project
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.project
- fullName: google.cloud.bigquery.job.LoadJob.quote_character
  isExternal: false
  name: quote_character
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.quote_character
- fullName: google.cloud.bigquery.job.LoadJob.range_partitioning
  isExternal: false
  name: range_partitioning
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.range_partitioning
- fullName: google.cloud.bigquery.job.LoadJob.reload
  isExternal: false
  name: reload
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.reload
- fullName: google.cloud.bigquery.job.LoadJob.reservation_usage
  isExternal: false
  name: reservation_usage
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.reservation_usage
- fullName: google.cloud.bigquery.job.LoadJob.result
  isExternal: false
  name: result
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.result
- fullName: google.cloud.bigquery.job.LoadJob.running
  isExternal: false
  name: running
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.running
- fullName: google.cloud.bigquery.job.LoadJob.schema
  isExternal: false
  name: schema
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.schema
- fullName: google.cloud.bigquery.job.LoadJob.schema_update_options
  isExternal: false
  name: schema_update_options
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.schema_update_options
- fullName: google.cloud.bigquery.job.LoadJob.script_statistics
  isExternal: false
  name: script_statistics
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.script_statistics
- fullName: google.cloud.bigquery.job.LoadJob.self_link
  isExternal: false
  name: self_link
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.self_link
- fullName: google.cloud.bigquery.job.LoadJob.session_info
  isExternal: false
  name: session_info
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.session_info
- fullName: google.cloud.bigquery.job.LoadJob.set_exception
  isExternal: false
  name: set_exception
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.set_exception
- fullName: google.cloud.bigquery.job.LoadJob.set_result
  isExternal: false
  name: set_result
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.set_result
- fullName: google.cloud.bigquery.job.LoadJob.skip_leading_rows
  isExternal: false
  name: skip_leading_rows
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.skip_leading_rows
- fullName: google.cloud.bigquery.job.LoadJob.source_format
  isExternal: false
  name: source_format
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.source_format
- fullName: google.cloud.bigquery.job.LoadJob.source_uris
  isExternal: false
  name: source_uris
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.source_uris
- fullName: google.cloud.bigquery.job.LoadJob.started
  isExternal: false
  name: started
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.started
- fullName: google.cloud.bigquery.job.LoadJob.state
  isExternal: false
  name: state
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.state
- fullName: google.cloud.bigquery.job.LoadJob.time_partitioning
  isExternal: false
  name: time_partitioning
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.time_partitioning
- fullName: google.cloud.bigquery.job.LoadJob.to_api_repr
  isExternal: false
  name: to_api_repr
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.to_api_repr
- fullName: google.cloud.bigquery.job.LoadJob.transaction_info
  isExternal: false
  name: transaction_info
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.transaction_info
- fullName: google.cloud.bigquery.job.LoadJob.use_avro_logical_types
  isExternal: false
  name: use_avro_logical_types
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.use_avro_logical_types
- fullName: google.cloud.bigquery.job.LoadJob.user_email
  isExternal: false
  name: user_email
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.user_email
- fullName: google.cloud.bigquery.job.LoadJob.write_disposition
  isExternal: false
  name: write_disposition
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.write_disposition
- fullName: google.cloud.bigquery.job.LoadJob.__init__
  isExternal: false
  name: __init__
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob.__init__
- fullName: google.cloud.bigquery.job.LoadJob
  isExternal: false
  name: LoadJob
  parent: google.cloud.bigquery.job.LoadJob
  uid: google.cloud.bigquery.job.LoadJob
