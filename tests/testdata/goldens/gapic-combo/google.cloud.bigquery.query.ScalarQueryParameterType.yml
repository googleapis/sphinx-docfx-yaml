### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.bigquery.query.ScalarQueryParameterType.from_api_repr
  - google.cloud.bigquery.query.ScalarQueryParameterType.to_api_repr
  - google.cloud.bigquery.query.ScalarQueryParameterType.with_name
  class: google.cloud.bigquery.query.ScalarQueryParameterType
  fullName: google.cloud.bigquery.query.ScalarQueryParameterType
  inheritance:
  - inheritance:
    - type: builtins.object
    type: google.cloud.bigquery.query._AbstractQueryParameterType
  langs:
  - python
  module: google.cloud.bigquery.query
  name: ScalarQueryParameterType
  source:
    id: ScalarQueryParameterType
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 145
  summary: 'Type representation for scalar query parameters.

    '
  syntax:
    content: ScalarQueryParameterType(type_, *, name=None, description=None)
    parameters:
    - description: One of 'STRING', 'INT64', 'FLOAT64', 'NUMERIC', 'BOOL', 'TIMESTAMP',
        'DATETIME', or 'DATE'.
      id: type_
      var_type: str
    - description: The name of the query parameter. Primarily used if the type is
        one of the subfields in <code>StructQueryParameterType</code> instance.
      id: name
      var_type: Optional[str]
    - description: The query parameter description. Primarily used if the type is
        one of the subfields in <code>StructQueryParameterType</code> instance.
      id: description
      var_type: Optional[str]
  type: class
  uid: google.cloud.bigquery.query.ScalarQueryParameterType
- attributes: []
  class: google.cloud.bigquery.query.ScalarQueryParameterType
  fullName: google.cloud.bigquery.query.ScalarQueryParameterType.from_api_repr
  langs:
  - python
  module: google.cloud.bigquery.query
  name: from_api_repr
  source:
    id: from_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 165
  summary: 'Factory: construct parameter type from JSON resource.

    '
  syntax:
    content: from_api_repr(resource)
    parameters:
    - description: JSON mapping of parameter
      id: resource
      var_type: Dict
    returns:
    - description: Instance
      var_type: google.cloud.bigquery.query.ScalarQueryParameterType
  type: method
  uid: google.cloud.bigquery.query.ScalarQueryParameterType.from_api_repr
- attributes: []
  class: google.cloud.bigquery.query.ScalarQueryParameterType
  fullName: google.cloud.bigquery.query.ScalarQueryParameterType.to_api_repr
  langs:
  - python
  module: google.cloud.bigquery.query
  name: to_api_repr
  source:
    id: to_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 178
  summary: 'Construct JSON API representation for the parameter type.

    '
  syntax:
    content: to_api_repr()
    parameters: []
    returns:
    - description: JSON mapping
      var_type: Dict
  type: method
  uid: google.cloud.bigquery.query.ScalarQueryParameterType.to_api_repr
- attributes: []
  class: google.cloud.bigquery.query.ScalarQueryParameterType
  fullName: google.cloud.bigquery.query.ScalarQueryParameterType.with_name
  langs:
  - python
  module: google.cloud.bigquery.query
  name: with_name
  source:
    id: with_name
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 189
  summary: 'Return a copy of the instance with `name` set to `new_name`.

    '
  syntax:
    content: 'with_name(new_name: typing.Optional[str])'
    parameters:
    - description: The new name of the query parameter type. If <code>None</code>,
        the existing name is cleared.
      id: name
      var_type: Union[str, None]
    returns:
    - description: A new instance with updated name.
      var_type: google.cloud.bigquery.query.ScalarQueryParameterType
  type: method
  uid: google.cloud.bigquery.query.ScalarQueryParameterType.with_name
references:
- fullName: google.cloud.bigquery.query.ScalarQueryParameterType.from_api_repr
  isExternal: false
  name: from_api_repr
  parent: google.cloud.bigquery.query.ScalarQueryParameterType
  uid: google.cloud.bigquery.query.ScalarQueryParameterType.from_api_repr
- fullName: google.cloud.bigquery.query.ScalarQueryParameterType.to_api_repr
  isExternal: false
  name: to_api_repr
  parent: google.cloud.bigquery.query.ScalarQueryParameterType
  uid: google.cloud.bigquery.query.ScalarQueryParameterType.to_api_repr
- fullName: google.cloud.bigquery.query.ScalarQueryParameterType.with_name
  isExternal: false
  name: with_name
  parent: google.cloud.bigquery.query.ScalarQueryParameterType
  uid: google.cloud.bigquery.query.ScalarQueryParameterType.with_name
