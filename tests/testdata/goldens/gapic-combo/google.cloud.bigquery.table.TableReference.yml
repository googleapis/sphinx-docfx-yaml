### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.bigquery.table.TableReference.dataset_id
  - google.cloud.bigquery.table.TableReference.from_api_repr
  - google.cloud.bigquery.table.TableReference.from_string
  - google.cloud.bigquery.table.TableReference.path
  - google.cloud.bigquery.table.TableReference.project
  - google.cloud.bigquery.table.TableReference.table_id
  - google.cloud.bigquery.table.TableReference.to_api_repr
  - google.cloud.bigquery.table.TableReference.to_bqstorage
  - google.cloud.bigquery.table.TableReference.__init__
  - google.cloud.bigquery.table.TableReference
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference
  inheritance:
  - inheritance:
    - type: builtins.object
    type: google.cloud.bigquery.table._TableBase
  langs:
  - python
  module: google.cloud.bigquery.table
  name: TableReference
  source:
    id: TableReference
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 172
  summary: 'TableReferences are pointers to tables.


    See

    https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablereference

    '
  syntax:
    content: 'TableReference(dataset_ref: DatasetReference, table_id: str)'
    parameters: []
  type: class
  uid: google.cloud.bigquery.table.TableReference
- &id001
  attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.dataset_id
  langs:
  - python
  module: google.cloud.bigquery.table
  name: dataset_id
  source:
    id: dataset_id
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'ID of dataset containing the table.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TableReference.dataset_id
- *id001
- attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.from_api_repr
  langs:
  - python
  module: google.cloud.bigquery.table
  name: from_api_repr
  source:
    id: from_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 249
  summary: 'Factory:  construct a table reference given its API representation

    '
  syntax:
    content: 'from_api_repr(resource: dict)'
    parameters:
    - description: Table reference representation returned from the API
      id: resource
      var_type: Dict[str, object]
    returns:
    - description: Table reference parsed from <code>resource</code>.
      var_type: google.cloud.bigquery.table.TableReference
  type: method
  uid: google.cloud.bigquery.table.TableReference.from_api_repr
- attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.from_string
  langs:
  - python
  module: google.cloud.bigquery.table
  name: from_string
  source:
    id: from_string
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 208
  summary: 'Construct a table reference from table ID string.

    '
  syntax:
    content: 'from_string(table_id: str, default_project: typing.Optional[str] = None)'
    exceptions:
    - description: If <code>table_id</code> is not a fully-qualified table ID in standard
        SQL format.
      var_type: ValueError
    parameters:
    - description: A table ID in standard SQL format. If <code>default_project</code>
        is not specified, this must included a project ID, dataset ID, and table ID,
        each separated by <code>.</code>.
      id: table_id
      var_type: str
    - defaultValue: None
      description: The project ID to use when <code>table_id</code> does not include
        a project ID.
      id: default_project
      var_type: Optional[str]
    returns:
    - description: Table reference parsed from <code>table_id</code>.
      var_type: 'TableReference .. rubric:: Examples >>> TableReference.from_string(''my-project.mydataset.mytable'')
        TableRef...(DatasetRef...(''my-project'', ''mydataset''), ''mytable'')'
  type: method
  uid: google.cloud.bigquery.table.TableReference.from_string
- &id002
  attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.path
  langs:
  - python
  module: google.cloud.bigquery.table
  name: path
  source:
    id: path
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'URL path for the table''s APIs.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TableReference.path
- *id002
- &id003
  attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.project
  langs:
  - python
  module: google.cloud.bigquery.table
  name: project
  source:
    id: project
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Project bound to the table.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TableReference.project
- *id003
- &id004
  attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.table_id
  langs:
  - python
  module: google.cloud.bigquery.table
  name: table_id
  source:
    id: table_id
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'The table ID.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.table.TableReference.table_id
- *id004
- attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.to_api_repr
  langs:
  - python
  module: google.cloud.bigquery.table
  name: to_api_repr
  source:
    id: to_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 269
  summary: 'Construct the API resource representation of this table reference.

    '
  syntax:
    content: to_api_repr()
    parameters: []
    returns:
    - description: Table reference represented as an API resource
      var_type: Dict[str, object]
  type: method
  uid: google.cloud.bigquery.table.TableReference.to_api_repr
- attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.to_bqstorage
  langs:
  - python
  module: google.cloud.bigquery.table
  name: to_bqstorage
  source:
    id: to_bqstorage
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 277
  summary: 'Construct a BigQuery Storage API representation of this table.


    Install the `google-cloud-bigquery-storage` package to use this

    feature.


    If the `table_id` contains a partition identifier (e.g.

    `my_table$201812`) or a snapshot identifier (e.g.

    `mytable@1234567890`), it is ignored. Use

    xref_TableReadOptions

    to filter rows by partition. Use

    xref_TableModifiers

    to select a specific snapshot to read from.

    '
  syntax:
    content: to_bqstorage()
    parameters: []
    returns:
    - description: A reference to this table in the BigQuery Storage API.
      var_type: str
  type: method
  uid: google.cloud.bigquery.table.TableReference.to_bqstorage
- attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference.__init__
  langs:
  - python
  module: google.cloud.bigquery.table
  name: __init__
  source:
    id: __init__
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 189
  summary: 'Initialize self.  See help(type(self)) for accurate signature.


    '
  syntax:
    content: '__init__(dataset_ref: DatasetReference, table_id: str)'
    parameters: []
  type: method
  uid: google.cloud.bigquery.table.TableReference.__init__
- attributes: []
  class: google.cloud.bigquery.table.TableReference
  fullName: google.cloud.bigquery.table.TableReference
  inheritance:
  - inheritance:
    - type: builtins.object
    type: google.cloud.bigquery.table._TableBase
  langs:
  - python
  module: google.cloud.bigquery.table
  name: TableReference
  source:
    id: TableReference
    path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/table.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 172
  summary: 'TableReferences are pointers to tables.


    See

    https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablereference

    '
  syntax:
    content: 'TableReference(dataset_ref: DatasetReference, table_id: str)'
    parameters: []
  type: method
  uid: google.cloud.bigquery.table.TableReference
references:
- fullName: google.cloud.bigquery.table.TableReference.dataset_id
  isExternal: false
  name: dataset_id
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.dataset_id
- fullName: google.cloud.bigquery.table.TableReference.from_api_repr
  isExternal: false
  name: from_api_repr
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.from_api_repr
- fullName: google.cloud.bigquery.table.TableReference.from_string
  isExternal: false
  name: from_string
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.from_string
- fullName: google.cloud.bigquery.table.TableReference.path
  isExternal: false
  name: path
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.path
- fullName: google.cloud.bigquery.table.TableReference.project
  isExternal: false
  name: project
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.project
- fullName: google.cloud.bigquery.table.TableReference.table_id
  isExternal: false
  name: table_id
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.table_id
- fullName: google.cloud.bigquery.table.TableReference.to_api_repr
  isExternal: false
  name: to_api_repr
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.to_api_repr
- fullName: google.cloud.bigquery.table.TableReference.to_bqstorage
  isExternal: false
  name: to_bqstorage
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.to_bqstorage
- fullName: google.cloud.bigquery.table.TableReference.__init__
  isExternal: false
  name: __init__
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference.__init__
- fullName: google.cloud.bigquery.table.TableReference
  isExternal: false
  name: TableReference
  parent: google.cloud.bigquery.table.TableReference
  uid: google.cloud.bigquery.table.TableReference
