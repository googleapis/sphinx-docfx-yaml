### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.bigquery.schema.SchemaField.description
  - google.cloud.bigquery.schema.SchemaField.field_type
  - google.cloud.bigquery.schema.SchemaField.fields
  - google.cloud.bigquery.schema.SchemaField.from_api_repr
  - google.cloud.bigquery.schema.SchemaField.is_nullable
  - google.cloud.bigquery.schema.SchemaField.max_length
  - google.cloud.bigquery.schema.SchemaField.mode
  - google.cloud.bigquery.schema.SchemaField.name
  - google.cloud.bigquery.schema.SchemaField.policy_tags
  - google.cloud.bigquery.schema.SchemaField.precision
  - google.cloud.bigquery.schema.SchemaField.scale
  - google.cloud.bigquery.schema.SchemaField.to_api_repr
  - google.cloud.bigquery.schema.SchemaField.to_standard_sql
  - google.cloud.bigquery.schema.SchemaField.__init__
  - google.cloud.bigquery.schema.SchemaField
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: SchemaField
  source:
    id: SchemaField
    path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 69
  summary: 'Describe a single field within a table schema.

    '
  syntax:
    content: "SchemaField(\n    name: str,\n    field_type: str,\n    mode: str =\
      \ \"NULLABLE\",\n    description: typing.Union[\n        str, google.cloud.bigquery.schema._DefaultSentinel\n\
      \    ] = _DefaultSentinel.DEFAULT_VALUE,\n    fields: typing.Iterable[google.cloud.bigquery.schema.SchemaField]\
      \ = (),\n    policy_tags: typing.Union[\n        google.cloud.bigquery.schema.PolicyTagList,\n\
      \        None,\n        google.cloud.bigquery.schema._DefaultSentinel,\n   \
      \ ] = _DefaultSentinel.DEFAULT_VALUE,\n    precision: typing.Union[\n      \
      \  int, google.cloud.bigquery.schema._DefaultSentinel\n    ] = _DefaultSentinel.DEFAULT_VALUE,\n\
      \    scale: typing.Union[\n        int, google.cloud.bigquery.schema._DefaultSentinel\n\
      \    ] = _DefaultSentinel.DEFAULT_VALUE,\n    max_length: typing.Union[\n  \
      \      int, google.cloud.bigquery.schema._DefaultSentinel\n    ] = _DefaultSentinel.DEFAULT_VALUE,\n\
      )"
    parameters: []
  type: class
  uid: google.cloud.bigquery.schema.SchemaField
- &id001
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.description
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: description
  source:
    id: description
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[str]: description for the field.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.description
- *id001
- &id002
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.field_type
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: field_type
  source:
    id: field_type
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'str: The type of the field.


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#TableFieldSchema.FIELDS.type


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.field_type
- *id002
- &id003
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.fields
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: fields
  source:
    id: fields
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[tuple]: Subfields contained in this field.


    Must be empty unset if `field_type` is not ''RECORD''.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.fields
- *id003
- attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.from_api_repr
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: from_api_repr
  source:
    id: from_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 137
  summary: 'Return a `SchemaField` object deserialized from a dictionary.

    '
  syntax:
    content: 'from_api_repr(api_repr: dict)'
    parameters:
    - description: The serialized representation of the SchemaField, such as what
        is output by <code>to_api_repr</code>.
      id: api_repr
      var_type: Mapping[str, str]
    returns:
    - description: The <code>SchemaField</code> object.
      var_type: google.cloud.bigquery.schema.SchemaField
  type: method
  uid: google.cloud.bigquery.schema.SchemaField.from_api_repr
- &id004
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.is_nullable
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: is_nullable
  source:
    id: is_nullable
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'bool: whether ''mode'' is ''nullable''.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.is_nullable
- *id004
- &id005
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.max_length
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: max_length
  source:
    id: max_length
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[int]: Maximum length for the STRING or BYTES field.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.max_length
- *id005
- &id006
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.mode
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: mode
  source:
    id: mode
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[str]: The mode of the field.


    See:

    https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#TableFieldSchema.FIELDS.mode


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.mode
- *id006
- &id007
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.name
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: name
  source:
    id: name
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'str: The name of the field.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.name
- *id007
- &id008
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.policy_tags
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: policy_tags
  source:
    id: policy_tags
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[<xref uid="google.cloud.bigquery.schema.PolicyTagList">google.cloud.bigquery.schema.PolicyTagList</xref>]:
    Policy tag list

    definition for this field.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.policy_tags
- *id008
- &id009
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.precision
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: precision
  source:
    id: precision
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[int]: Precision (number of digits) for the NUMERIC field.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.precision
- *id009
- &id010
  attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.scale
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: scale
  source:
    id: scale
    path: null
    remote:
      branch: add_goldens
      path: null
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: null
  summary: 'Optional[int]: Scale (digits after decimal) for the NUMERIC field.


    '
  syntax: {}
  type: property
  uid: google.cloud.bigquery.schema.SchemaField.scale
- *id010
- attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.to_api_repr
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: to_api_repr
  source:
    id: to_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 236
  summary: 'Return a dictionary representing this schema field.

    '
  syntax:
    content: to_api_repr()
    parameters: []
    returns:
    - description: A dictionary representing the SchemaField in a serialized form.
      var_type: Dict
  type: method
  uid: google.cloud.bigquery.schema.SchemaField.to_api_repr
- attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.to_standard_sql
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: to_standard_sql
  source:
    id: to_standard_sql
    path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 289
  summary: 'Return the field as the standard SQL field representation object.


    '
  syntax:
    content: to_standard_sql()
    parameters: []
  type: method
  uid: google.cloud.bigquery.schema.SchemaField.to_standard_sql
- attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField.__init__
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: __init__
  source:
    id: __init__
    path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 98
  summary: 'Initialize self.  See help(type(self)) for accurate signature.


    '
  syntax:
    content: "__init__(\n    name: str,\n    field_type: str,\n    mode: str = \"\
      NULLABLE\",\n    description: typing.Union[\n        str, google.cloud.bigquery.schema._DefaultSentinel\n\
      \    ] = _DefaultSentinel.DEFAULT_VALUE,\n    fields: typing.Iterable[google.cloud.bigquery.schema.SchemaField]\
      \ = (),\n    policy_tags: typing.Union[\n        google.cloud.bigquery.schema.PolicyTagList,\n\
      \        None,\n        google.cloud.bigquery.schema._DefaultSentinel,\n   \
      \ ] = _DefaultSentinel.DEFAULT_VALUE,\n    precision: typing.Union[\n      \
      \  int, google.cloud.bigquery.schema._DefaultSentinel\n    ] = _DefaultSentinel.DEFAULT_VALUE,\n\
      \    scale: typing.Union[\n        int, google.cloud.bigquery.schema._DefaultSentinel\n\
      \    ] = _DefaultSentinel.DEFAULT_VALUE,\n    max_length: typing.Union[\n  \
      \      int, google.cloud.bigquery.schema._DefaultSentinel\n    ] = _DefaultSentinel.DEFAULT_VALUE,\n\
      )"
    parameters: []
  type: method
  uid: google.cloud.bigquery.schema.SchemaField.__init__
- attributes: []
  class: google.cloud.bigquery.schema.SchemaField
  fullName: google.cloud.bigquery.schema.SchemaField
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: google.cloud.bigquery.schema
  name: SchemaField
  source:
    id: SchemaField
    path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/schema.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 69
  summary: 'Describe a single field within a table schema.

    '
  syntax:
    content: "SchemaField(\n    name: str,\n    field_type: str,\n    mode: str =\
      \ \"NULLABLE\",\n    description: typing.Union[\n        str, google.cloud.bigquery.schema._DefaultSentinel\n\
      \    ] = _DefaultSentinel.DEFAULT_VALUE,\n    fields: typing.Iterable[google.cloud.bigquery.schema.SchemaField]\
      \ = (),\n    policy_tags: typing.Union[\n        google.cloud.bigquery.schema.PolicyTagList,\n\
      \        None,\n        google.cloud.bigquery.schema._DefaultSentinel,\n   \
      \ ] = _DefaultSentinel.DEFAULT_VALUE,\n    precision: typing.Union[\n      \
      \  int, google.cloud.bigquery.schema._DefaultSentinel\n    ] = _DefaultSentinel.DEFAULT_VALUE,\n\
      \    scale: typing.Union[\n        int, google.cloud.bigquery.schema._DefaultSentinel\n\
      \    ] = _DefaultSentinel.DEFAULT_VALUE,\n    max_length: typing.Union[\n  \
      \      int, google.cloud.bigquery.schema._DefaultSentinel\n    ] = _DefaultSentinel.DEFAULT_VALUE,\n\
      )"
    parameters: []
  type: method
  uid: google.cloud.bigquery.schema.SchemaField
references:
- fullName: google.cloud.bigquery.schema.SchemaField.description
  isExternal: false
  name: description
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.description
- fullName: google.cloud.bigquery.schema.SchemaField.field_type
  isExternal: false
  name: field_type
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.field_type
- fullName: google.cloud.bigquery.schema.SchemaField.fields
  isExternal: false
  name: fields
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.fields
- fullName: google.cloud.bigquery.schema.SchemaField.from_api_repr
  isExternal: false
  name: from_api_repr
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.from_api_repr
- fullName: google.cloud.bigquery.schema.SchemaField.is_nullable
  isExternal: false
  name: is_nullable
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.is_nullable
- fullName: google.cloud.bigquery.schema.SchemaField.max_length
  isExternal: false
  name: max_length
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.max_length
- fullName: google.cloud.bigquery.schema.SchemaField.mode
  isExternal: false
  name: mode
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.mode
- fullName: google.cloud.bigquery.schema.SchemaField.name
  isExternal: false
  name: name
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.name
- fullName: google.cloud.bigquery.schema.SchemaField.policy_tags
  isExternal: false
  name: policy_tags
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.policy_tags
- fullName: google.cloud.bigquery.schema.SchemaField.precision
  isExternal: false
  name: precision
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.precision
- fullName: google.cloud.bigquery.schema.SchemaField.scale
  isExternal: false
  name: scale
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.scale
- fullName: google.cloud.bigquery.schema.SchemaField.to_api_repr
  isExternal: false
  name: to_api_repr
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.to_api_repr
- fullName: google.cloud.bigquery.schema.SchemaField.to_standard_sql
  isExternal: false
  name: to_standard_sql
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.to_standard_sql
- fullName: google.cloud.bigquery.schema.SchemaField.__init__
  isExternal: false
  name: __init__
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField.__init__
- fullName: google.cloud.bigquery.schema.SchemaField
  isExternal: false
  name: SchemaField
  parent: google.cloud.bigquery.schema.SchemaField
  uid: google.cloud.bigquery.schema.SchemaField
