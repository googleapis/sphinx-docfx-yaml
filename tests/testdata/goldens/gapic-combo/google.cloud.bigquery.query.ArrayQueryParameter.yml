### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.bigquery.query.ArrayQueryParameter.from_api_repr
  - google.cloud.bigquery.query.ArrayQueryParameter.positional
  - google.cloud.bigquery.query.ArrayQueryParameter.to_api_repr
  class: google.cloud.bigquery.query.ArrayQueryParameter
  fullName: google.cloud.bigquery.query.ArrayQueryParameter
  inheritance:
  - inheritance:
    - type: builtins.object
    type: google.cloud.bigquery.query._AbstractQueryParameter
  langs:
  - python
  module: google.cloud.bigquery.query
  name: ArrayQueryParameter
  source:
    id: ArrayQueryParameter
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 503
  summary: 'Named / positional query parameters for array values.

    '
  syntax:
    content: ArrayQueryParameter(name, array_type, values)
    parameters:
    - description: Parameter name, used via <code>@foo</code> syntax. If None, the
        parameter can only be addressed via position (<code>?</code>).
      id: name
      var_type: Optional[str]
    - description: The type of array elements. If given as a string, it must be one
        of <code>'STRING'</code>, <code>'INT64'</code>, <code>'FLOAT64'</code>, <code>'NUMERIC'</code>,
        <code>'BIGNUMERIC'</code>, <code>'BOOL'</code>, <code>'TIMESTAMP'</code>,
        <code>'DATE'</code>, or <code>'STRUCT'</code>/<code>'RECORD'</code>. If the
        type is <code>'STRUCT'</code>/<code>'RECORD'</code> and <code>values</code>
        is empty, the exact item type cannot be deduced, thus a <code>StructQueryParameterType</code>
        instance needs to be passed in.
      id: array_type
      var_type: Union[str, ScalarQueryParameterType, StructQueryParameterType]
    - description: The parameter array values.
      id: values
      var_type: List[appropriate type]
  type: class
  uid: google.cloud.bigquery.query.ArrayQueryParameter
- attributes: []
  class: google.cloud.bigquery.query.ArrayQueryParameter
  fullName: google.cloud.bigquery.query.ArrayQueryParameter.from_api_repr
  langs:
  - python
  module: google.cloud.bigquery.query
  name: from_api_repr
  source:
    id: from_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 583
  summary: 'Factory: construct parameter from JSON resource.

    '
  syntax:
    content: 'from_api_repr(resource: dict)'
    parameters:
    - description: JSON mapping of parameter
      id: resource
      var_type: Dict
    returns:
    - description: Instance
      var_type: google.cloud.bigquery.query.ArrayQueryParameter
  type: method
  uid: google.cloud.bigquery.query.ArrayQueryParameter.from_api_repr
- attributes: []
  class: google.cloud.bigquery.query.ArrayQueryParameter
  fullName: google.cloud.bigquery.query.ArrayQueryParameter.positional
  langs:
  - python
  module: google.cloud.bigquery.query
  name: positional
  source:
    id: positional
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 534
  summary: 'Factory for positional parameters.

    '
  syntax:
    content: 'positional(array_type: str, values: list)'
    parameters:
    - description: The type of array elements. If given as a string, it must be one
        of <code>'STRING'</code>, <code>'INT64'</code>, <code>'FLOAT64'</code>, <code>'NUMERIC'</code>,
        <code>'BIGNUMERIC'</code>, <code>'BOOL'</code>, <code>'TIMESTAMP'</code>,
        <code>'DATE'</code>, or <code>'STRUCT'</code>/<code>'RECORD'</code>. If the
        type is <code>'STRUCT'</code>/<code>'RECORD'</code> and <code>values</code>
        is empty, the exact item type cannot be deduced, thus a <code>StructQueryParameterType</code>
        instance needs to be passed in.
      id: array_type
      var_type: Union[str, ScalarQueryParameterType, StructQueryParameterType]
    - description: The parameter array values.
      id: values
      var_type: List[appropriate type]
    returns:
    - description: Instance without name
      var_type: google.cloud.bigquery.query.ArrayQueryParameter
  type: method
  uid: google.cloud.bigquery.query.ArrayQueryParameter.positional
- attributes: []
  class: google.cloud.bigquery.query.ArrayQueryParameter
  fullName: google.cloud.bigquery.query.ArrayQueryParameter.to_api_repr
  langs:
  - python
  module: google.cloud.bigquery.query
  name: to_api_repr
  source:
    id: to_api_repr
    path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
    remote:
      branch: add_goldens
      path: tests/testdata/gapic-combo/google/cloud/bigquery/query.py
      repo: git@github.com:googleapis/sphinx-docfx-yaml.git
    startLine: 598
  summary: 'Construct JSON API representation for the parameter.

    '
  syntax:
    content: to_api_repr()
    parameters: []
    returns:
    - description: JSON mapping
      var_type: Dict
  type: method
  uid: google.cloud.bigquery.query.ArrayQueryParameter.to_api_repr
references:
- fullName: google.cloud.bigquery.query.ArrayQueryParameter.from_api_repr
  isExternal: false
  name: from_api_repr
  parent: google.cloud.bigquery.query.ArrayQueryParameter
  uid: google.cloud.bigquery.query.ArrayQueryParameter.from_api_repr
- fullName: google.cloud.bigquery.query.ArrayQueryParameter.positional
  isExternal: false
  name: positional
  parent: google.cloud.bigquery.query.ArrayQueryParameter
  uid: google.cloud.bigquery.query.ArrayQueryParameter.positional
- fullName: google.cloud.bigquery.query.ArrayQueryParameter.to_api_repr
  isExternal: false
  name: to_api_repr
  parent: google.cloud.bigquery.query.ArrayQueryParameter
  uid: google.cloud.bigquery.query.ArrayQueryParameter.to_api_repr
