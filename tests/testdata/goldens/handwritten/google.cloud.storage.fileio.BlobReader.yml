### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google.cloud.storage.fileio.BlobReader.close
  - google.cloud.storage.fileio.BlobReader.read
  - google.cloud.storage.fileio.BlobReader.read1
  - google.cloud.storage.fileio.BlobReader.readable
  - google.cloud.storage.fileio.BlobReader.seek
  - google.cloud.storage.fileio.BlobReader.seekable
  - google.cloud.storage.fileio.BlobReader.writable
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: _io._IOBase
      type: _io._BufferedIOBase
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: _io._IOBase
      type: io.IOBase
    type: io.BufferedIOBase
  langs:
  - python
  module: google.cloud.storage.fileio
  name: BlobReader
  source:
    id: BlobReader
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 59
  summary: 'A file-like object that reads from a blob.

    '
  syntax:
    content: BlobReader(blob, chunk_size=None, retry=<google.api_core.retry.Retry
      object>, **download_kwargs)
    parameters:
    - description: The blob to download.
      id: blob
      var_type: '''<xref uid="google.cloud.storage.blob.Blob">google.cloud.storage.blob.Blob</xref>'''
    - description: (Optional) The minimum number of bytes to read at a time. If fewer
        bytes than the chunk_size are requested, the remainder is buffered. The default
        is the chunk_size of the blob, or 40MiB.
      id: chunk_size
      var_type: long
    - description: (Optional) How to retry the RPC. A None value will disable retries.
        A google.api_core.retry.Retry value will enable retries, and the object will
        define retriable response codes and errors and configure backoff and timeout
        options. A <xref uid="google.cloud.storage.retry.ConditionalRetryPolicy">google.cloud.storage.retry.ConditionalRetryPolicy</xref>
        value wraps a Retry object and activates it only if certain conditions are
        met. This class exists to provide safe defaults for RPC calls that are not
        technically safe to retry normally (due to potential data duplication or other
        side-effects) but become safe to retry if a condition such as if_metageneration_match
        is set. See the retry.py source code and docstrings in this package (<xref
        uid="google.cloud.storage.retry">google.cloud.storage.retry</xref>) for information
        on retry types and how to configure them. Media operations (downloads and
        uploads) do not support non-default predicates in a Retry object. The default
        will always be used. Other configuration changes for Retry objects such as
        delays and deadlines are respected.
      id: retry
      var_type: google.api_core.retry.Retry or <xref uid="google.cloud.storage.retry.ConditionalRetryPolicy">google.cloud.storage.retry.ConditionalRetryPolicy</xref>
  type: class
  uid: google.cloud.storage.fileio.BlobReader
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.close
  langs:
  - python
  module: google.cloud.storage.fileio
  name: close
  source:
    id: close
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 211
  summary: 'Flush and close the IO object.


    This method has no effect if the file is already closed.


    '
  syntax:
    content: close()
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.close
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.read
  langs:
  - python
  module: google.cloud.storage.fileio
  name: read
  source:
    id: read
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 123
  summary: 'Read and return up to n bytes.


    If the argument is omitted, None, or negative, reads and

    returns all data until EOF.


    If the argument is positive, and the underlying raw stream is

    not ''interactive'', multiple raw reads may be issued to satisfy

    the byte count (unless EOF is reached first).  But for

    interactive raw streams (as well as sockets and pipes), at most

    one raw read will be issued, and a short result does not imply

    that EOF is imminent.


    Returns an empty bytes object on EOF.


    Returns None if the underlying raw stream was open in non-blocking

    mode and no data is available at the moment.


    '
  syntax:
    content: read(size=-1)
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.read
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.read1
  langs:
  - python
  module: google.cloud.storage.fileio
  name: read1
  source:
    id: read1
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 168
  summary: 'Read and return up to n bytes, with at most one read() call

    to the underlying raw stream. A short result does not imply

    that EOF is imminent.


    Returns an empty bytes object on EOF.


    '
  syntax:
    content: read1(size=-1)
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.read1
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.readable
  langs:
  - python
  module: google.cloud.storage.fileio
  name: readable
  source:
    id: readable
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 218
  summary: 'Return whether object was opened for reading.


    If False, read() will raise OSError.


    '
  syntax:
    content: readable()
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.readable
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.seek
  langs:
  - python
  module: google.cloud.storage.fileio
  name: seek
  source:
    id: seek
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 171
  summary: 'Seek within the blob.


    This implementation of seek() uses knowledge of the blob size to

    validate that the reported position does not exceed the blob last byte.

    If the blob size is not already known it will call blob.reload().


    '
  syntax:
    content: seek(pos, whence=0)
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.seek
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.seekable
  langs:
  - python
  module: google.cloud.storage.fileio
  name: seekable
  source:
    id: seekable
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 224
  summary: 'Return whether object supports random access.


    If False, seek(), tell() and truncate() will raise OSError.

    This method may need to do a test seek().


    '
  syntax:
    content: seekable()
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.seekable
- attributes: []
  class: google.cloud.storage.fileio.BlobReader
  fullName: google.cloud.storage.fileio.BlobReader.writable
  langs:
  - python
  module: google.cloud.storage.fileio
  name: writable
  source:
    id: writable
    path: tests/testdata/handwritten/google/cloud/storage/fileio.py
    remote:
      branch: add_goldens
      path: tests/testdata/handwritten/google/cloud/storage/fileio.py
      repo: https://github.com/googleapis/sphinx-docfx-yaml
    startLine: 221
  summary: 'Return whether object was opened for writing.


    If False, write() will raise OSError.


    '
  syntax:
    content: writable()
    parameters: []
  type: method
  uid: google.cloud.storage.fileio.BlobReader.writable
references:
- fullName: google.cloud.storage.fileio.BlobReader.close
  isExternal: false
  name: close
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.close
- fullName: google.cloud.storage.fileio.BlobReader.read
  isExternal: false
  name: read
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.read
- fullName: google.cloud.storage.fileio.BlobReader.read1
  isExternal: false
  name: read1
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.read1
- fullName: google.cloud.storage.fileio.BlobReader.readable
  isExternal: false
  name: readable
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.readable
- fullName: google.cloud.storage.fileio.BlobReader.seek
  isExternal: false
  name: seek
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.seek
- fullName: google.cloud.storage.fileio.BlobReader.seekable
  isExternal: false
  name: seekable
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.seekable
- fullName: google.cloud.storage.fileio.BlobReader.writable
  isExternal: false
  name: writable
  parent: google.cloud.storage.fileio.BlobReader
  uid: google.cloud.storage.fileio.BlobReader.writable
