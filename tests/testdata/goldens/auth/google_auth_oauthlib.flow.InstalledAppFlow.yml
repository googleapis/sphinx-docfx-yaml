### YamlMime:UniversalReference
api_name: []
items:
- attributes: []
  children:
  - google_auth_oauthlib.flow.InstalledAppFlow
  - google_auth_oauthlib.flow.InstalledAppFlow.authorization_url
  - google_auth_oauthlib.flow.InstalledAppFlow.authorized_session
  - google_auth_oauthlib.flow.InstalledAppFlow.client_config
  - google_auth_oauthlib.flow.InstalledAppFlow.client_type
  - google_auth_oauthlib.flow.InstalledAppFlow.credentials
  - google_auth_oauthlib.flow.InstalledAppFlow.fetch_token
  - google_auth_oauthlib.flow.InstalledAppFlow.from_client_config
  - google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file
  - google_auth_oauthlib.flow.InstalledAppFlow.oauth2session
  - google_auth_oauthlib.flow.InstalledAppFlow.redirect_uri
  - google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: InstalledAppFlow
  source:
    id: InstalledAppFlow
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 319
  summary: "Authorization flow helper for installed applications.\n\nThis `Flow` subclass\
    \ makes it easier to perform the\n`Installed Application Authorization Flow`_.\
    \ This flow is useful for\nlocal development or applications that are installed\
    \ on a desktop operating\nsystem.\n\nThis flow uses a local server strategy provided\
    \ by `run_local_server`.\n\nExample::\n\n    from google_auth_oauthlib.flow import\
    \ InstalledAppFlow\n\n    flow = InstalledAppFlow.from_client_secrets_file(\n\
    \        'client_secrets.json',\n        scopes=['profile', 'email'])\n\n    flow.run_local_server()\n\
    \n    session = flow.authorized_session()\n\n    profile_info = session.get(\n\
    \        'https://www.googleapis.com/userinfo/v2/me').json()\n\n    print(profile_info)\n\
    \    # {'name': '...',  'email': '...', ...}\n\n\nNote that this isn't the only\
    \ way to accomplish the installed\napplication flow, just one of the most common.\
    \ You can use the\n`Flow` class to perform the same flow with different methods\
    \ of\npresenting the authorization URL to the user or obtaining the authorization\n\
    response, such as using an embedded web view.\n\n.. _Installed Application Authorization\
    \ Flow:\n    https://github.com/googleapis/google-api-python-client/blob/main/docs/oauth-installed.md\n\
    \n"
  syntax:
    content: "InstalledAppFlow(\n    oauth2session,\n    client_type,\n    client_config,\n\
      \    redirect_uri=None,\n    code_verifier=None,\n    autogenerate_code_verifier=True,\n\
      )"
    parameters: []
  type: class
  uid: google_auth_oauthlib.flow.InstalledAppFlow
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: InstalledAppFlow
  source:
    id: InstalledAppFlow
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 319
  summary: ''
  syntax:
    content: "InstalledAppFlow(\n    oauth2session,\n    client_type,\n    client_config,\n\
      \    redirect_uri=None,\n    code_verifier=None,\n    autogenerate_code_verifier=True,\n\
      )"
    parameters:
    - description: The OAuth 2.0 session from <code>requests-oauthlib</code>.
      id: oauth2session
      var_type: requests_oauthlib.OAuth2Session
    - description: The client type, either <code>web</code> or <code>installed</code>.
      id: client_type
      var_type: str
    - description: The client configuration in the Google <code>client secrets</code>_
        format.
      id: client_config
      var_type: Mapping[str, Any]
    - description: The OAuth 2.0 redirect URI if known at flow creation time. Otherwise,
        it will need to be set using <code>redirect_uri</code>.
      id: redirect_uri
      var_type: str
    - description: random string of 43-128 chars used to verify the key exchange.using
        PKCE.
      id: code_verifier
      var_type: str
    - description: If true, auto-generate a code_verifier.
      id: autogenerate_code_verifier
      var_type: 'bool .. _client secrets: https://github.com/googleapis/google-api-python-client/blob
        /main/docs/client-secrets.md'
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.authorization_url
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: authorization_url
  source:
    id: authorization_url
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 215
  summary: 'Generates an authorization URL.


    This is the first step in the OAuth 2.0 Authorization Flow. The user''s

    browser should be redirected to the returned URL.


    This method calls

    `requests_oauthlib.OAuth2Session.authorization_url`

    and specifies the client configuration''s authorization URI (usually

    Google''s authorization server) and specifies that "offline" access is

    desired. This is required in order to obtain a refresh token.

    '
  syntax:
    content: authorization_url(**kwargs)
    parameters: []
    returns:
    - description: The generated authorization URL and state. The user must visit
        the URL to complete the flow. The state is used when completing the flow to
        verify that the request originated from your application. If your application
        is using a different <code>Flow</code> instance to obtain the token, you will
        need to specify the <code>state</code> when constructing the <code>Flow</code>.
      var_type: Tuple[str, str]
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow.authorization_url
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.authorized_session
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: authorized_session
  source:
    id: authorized_session
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 305
  summary: 'Returns a `requests.Session` authorized with credentials.


    `fetch_token` must be called before this method. This method

    constructs a `google.auth.transport.requests.AuthorizedSession`

    class using this flow''s `credentials`.

    '
  syntax:
    content: authorized_session()
    parameters: []
    returns:
    - description: The constructed session.
      var_type: google.auth.transport.requests.AuthorizedSession
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow.authorized_session
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.client_config
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: client_config
  source:
    id: client_config
    path: null
    startLine: null
  summary: 'The OAuth 2.0 client configuration.


    :type: Mapping[str, Any]


    '
  syntax: {}
  type: attribute
  uid: google_auth_oauthlib.flow.InstalledAppFlow.client_config
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.client_type
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: client_type
  source:
    id: client_type
    path: null
    startLine: null
  summary: 'The client type, either `''web''` or `''installed''`


    :type: str


    '
  syntax: {}
  type: attribute
  uid: google_auth_oauthlib.flow.InstalledAppFlow.client_type
- &id001
  attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.credentials
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: credentials
  source:
    id: credentials
    path: null
    startLine: null
  summary: 'Returns credentials from the OAuth 2.0 session.


    `fetch_token` must be called before accessing this. This method

    constructs a `google.oauth2.credentials.Credentials` class using

    the session''s token and the client config.

    '
  syntax:
    exceptions:
    - description: If there is no access token in the session.
      var_type: ValueError
    returns:
    - description: The constructed credentials.
      var_type: google.oauth2.credentials.Credentials
  type: property
  uid: google_auth_oauthlib.flow.InstalledAppFlow.credentials
- *id001
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.fetch_token
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: fetch_token
  source:
    id: fetch_token
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 260
  summary: 'Completes the Authorization Flow and obtains an access token.


    This is the final step in the OAuth 2.0 Authorization Flow. This is

    called after the user consents.


    This method calls

    `requests_oauthlib.OAuth2Session.fetch_token`

    and specifies the client configuration''s token URI (usually Google''s

    token server).

    '
  syntax:
    content: fetch_token(**kwargs)
    parameters: []
    returns:
    - description: The obtained tokens. Typically, you will not use return value of
        this function and instead use <code>credentials</code> to obtain a <code>google.auth.credentials.Credentials</code>
        instance.
      var_type: Mapping[str, str]
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow.fetch_token
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.from_client_config
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: from_client_config
  source:
    id: from_client_config
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 131
  summary: 'Creates a `requests_oauthlib.OAuth2Session` from client

    configuration loaded from a Google-format client secrets file.

    '
  syntax:
    content: from_client_config(client_config, scopes, **kwargs)
    exceptions:
    - description: 'If the client configuration is not in the correct format. .. _client
        secrets: https://github.com/googleapis/google-api-python-client/blob/main/docs/client-secrets.md'
      var_type: ValueError
    parameters:
    - description: The client configuration in the Google <code>client secrets</code>_
        format.
      id: client_config
      var_type: Mapping[str, Any]
    - description: The list of scopes to request during the flow.
      id: scopes
      var_type: Sequence[str]
    returns:
    - description: The constructed Flow instance.
      var_type: Flow
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow.from_client_config
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: from_client_secrets_file
  source:
    id: from_client_secrets_file
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 183
  summary: 'Creates a `Flow` instance from a Google client secrets file.

    '
  syntax:
    content: from_client_secrets_file(client_secrets_file, scopes, **kwargs)
    parameters:
    - description: The path to the client secrets .json file.
      id: client_secrets_file
      var_type: str
    - description: The list of scopes to request during the flow.
      id: scopes
      var_type: Sequence[str]
    returns:
    - description: The constructed Flow instance.
      var_type: Flow
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.oauth2session
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: oauth2session
  source:
    id: oauth2session
    path: null
    startLine: null
  summary: 'The OAuth 2.0 session.


    :type: requests_oauthlib.OAuth2Session


    '
  syntax: {}
  type: attribute
  uid: google_auth_oauthlib.flow.InstalledAppFlow.oauth2session
- &id002
  attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.redirect_uri
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: redirect_uri
  source:
    id: redirect_uri
    path: null
    startLine: null
  summary: 'The OAuth 2.0 redirect URI. Pass-through to

    `self.oauth2session.redirect_uri`.


    '
  syntax: {}
  type: property
  uid: google_auth_oauthlib.flow.InstalledAppFlow.redirect_uri
- *id002
- attributes: []
  class: google_auth_oauthlib.flow.InstalledAppFlow
  fullName: google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
  langs:
  - python
  module: google_auth_oauthlib.flow
  name: run_local_server
  source:
    id: run_local_server
    path: tests/testdata/auth/google_auth_oauthlib/flow.py
    startLine: 371
  summary: 'Run the flow using the server strategy.


    The server strategy instructs the user to open the authorization URL in

    their browser and will attempt to automatically open the URL for them.

    It will start a local web server to listen for the authorization

    response. Once authorization is complete the authorization server will

    redirect the user''s browser to the local web server. The web server

    will get the authorization code from the response and shutdown. The

    code is then exchanged for a token.

    '
  syntax:
    content: "run_local_server(\n    host=\"localhost\",\n    bind_addr=None,\n  \
      \  port=8080,\n    authorization_prompt_message=\"Please visit this URL to authorize\
      \ this application: {url}\",\n    success_message=\"The authentication flow\
      \ has completed. You may close this window.\",\n    open_browser=True,\n   \
      \ redirect_uri_trailing_slash=True,\n    timeout_seconds=None,\n    **kwargs\n\
      )"
    parameters:
    - description: The hostname for the local redirect server. This will be served
        over http, not https.
      id: host
      var_type: str
    - description: Optionally provide an ip address for the redirect server to listen
        on when it is not the same as host (e.g. in a container). Default value is
        None, which means that the redirect server will listen on the ip address specified
        in the host parameter.
      id: bind_addr
      var_type: str
    - description: The port for the local redirect server.
      id: port
      var_type: int
    - description: The message to display to tell the user to navigate to the authorization
        URL. If None or empty, don't display anything.
      id: authorization_prompt_message
      var_type: str None
    - description: The message to display in the web browser the authorization flow
        is complete.
      id: success_message
      var_type: str
    - description: Whether or not to open the authorization URL in the user's browser.
      id: open_browser
      var_type: bool
    - description: whether or not to add trailing slash when constructing the redirect_uri.
        Default value is True.
      id: redirect_uri_trailing_slash
      var_type: bool
    - description: It will raise an error after the timeout timing if there are no
        credentials response. The value is in seconds. When set to None there is no
        timeout. Default value is None.
      id: timeout_seconds
      var_type: int
    returns:
    - description: The OAuth 2.0 credentials for the user.
      var_type: google.oauth2.credentials.Credentials
  type: method
  uid: google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
references:
- fullName: google_auth_oauthlib.flow.InstalledAppFlow
  isExternal: false
  name: InstalledAppFlow
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.authorization_url
  isExternal: false
  name: authorization_url
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.authorization_url
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.authorized_session
  isExternal: false
  name: authorized_session
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.authorized_session
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.client_config
  isExternal: false
  name: client_config
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.client_config
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.client_type
  isExternal: false
  name: client_type
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.client_type
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.credentials
  isExternal: false
  name: credentials
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.credentials
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.fetch_token
  isExternal: false
  name: fetch_token
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.fetch_token
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.from_client_config
  isExternal: false
  name: from_client_config
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.from_client_config
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file
  isExternal: false
  name: from_client_secrets_file
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.oauth2session
  isExternal: false
  name: oauth2session
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.oauth2session
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.redirect_uri
  isExternal: false
  name: redirect_uri
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.redirect_uri
- fullName: google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
  isExternal: false
  name: run_local_server
  parent: google_auth_oauthlib.flow.InstalledAppFlow
  uid: google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
